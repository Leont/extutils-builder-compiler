name: "multiperl test"
on:
  push:
    branches: "*"
    tags-ignore: "*"
  pull_request: ~

# FUTURE ENHANCEMENT(s):
# * install faster (see below)
# * use github.event.repository.name or ${GITHUB_REPOSITORY#*/} as the
#   tarball/build name instead of Dist-To-Test

jobs:
  build-tarball:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Install cpanminus
        run: |
          curl https://cpanmin.us/ > /tmp/cpanm
          chmod u+x /tmp/cpanm
      - name: Install Dist::Zilla
        run: sudo apt-get install -y libdist-zilla-perl
      - name: Install prereqs
        # This could probably be made more efficient by looking at what it's
        # installing via cpanm that could, instead, be installed from apt.  I
        # may do that later, but for now, it's fine! -- rjbs, 2023-01-07
        run: |
          dzil authordeps --missing > /tmp/deps-phase-1.txt
          /tmp/cpanm --notest -S < /tmp/deps-phase-1.txt
          dzil listdeps --author --missing >> /tmp/deps-phase-2.txt
          /tmp/cpanm --notest -S < /tmp/deps-phase-2.txt
      - name: Build tarball
        run: |
          dzil build --in Dist-To-Test
          tar zcvf Dist-To-Test.tar.gz Dist-To-Test
      - name: Upload tarball
        uses: actions/upload-artifact@v4
        with:
          name: Dist-To-Test.tar.gz
          path: Dist-To-Test.tar.gz

  linux-test:
    needs: build-tarball
    env:
      # some plugins still needs this to run their tests...
      PERL_USE_UNSAFE_INC: 0
      AUTHOR_TESTING: 1
      AUTOMATED_TESTING: 1
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        perl-version: [ "5.40" ]
    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}
    steps:
      - name: Download tarball
        uses: actions/download-artifact@v4
        with:
          name: Dist-To-Test.tar.gz
      - name: Extract tarball
        run: tar zxvf Dist-To-Test.tar.gz
      - name: Install dependencies
        working-directory: ./Dist-To-Test
        run: cpanm --installdeps --notest .
      - name: Configure
        working-directory: ./Dist-To-Test
        run: perl Makefile.PL
      - name: Build
        working-directory: ./Dist-To-Test
        run: make
      - name: Test
        working-directory: ./Dist-To-Test
        run: make test

  macos-test:
    needs: build-tarball
    env:
      # some plugins still needs this to run their tests...
      PERL_USE_UNSAFE_INC: 0
      AUTHOR_TESTING: 1
      AUTOMATED_TESTING: 1
    runs-on: macos-latest
    steps:
      - name: Download tarball
        uses: actions/download-artifact@v4
        with:
          name: Dist-To-Test.tar.gz
      - name: Extract tarball
        run: tar zxvf Dist-To-Test.tar.gz
      - name: Install cpanm
        run: brew install cpanminus
      - name: Install dependencies
        working-directory: ./Dist-To-Test
        run: cpanm --installdeps --notest .
      - name: Configure
        working-directory: ./Dist-To-Test
        run: perl Makefile.PL
      - name: Build
        working-directory: ./Dist-To-Test
        run: make
      - name: Test
        working-directory: ./Dist-To-Test
        run: make test

  windows-test:
    needs: build-tarball
    env:
      # some plugins still needs this to run their tests...
      PERL_USE_UNSAFE_INC: 0
      AUTHOR_TESTING: 1
      AUTOMATED_TESTING: 1
    runs-on: windows-latest
    steps:
      - name: Download tarball
        uses: actions/download-artifact@v4
        with:
          name: Dist-To-Test.tar.gz
      - name: Extract tarball
        run: tar zxvf Dist-To-Test.tar.gz
      - name: Install cpanm
        run: cpan App::cpanminus
      - name: Install dependencies
        working-directory: ./Dist-To-Test
        run: cpanm --installdeps --notest -v .
      - name: Configure
        working-directory: ./Dist-To-Test
        run: perl Makefile.PL
      - name: Build
        working-directory: ./Dist-To-Test
        run: make
      - name: Test
        working-directory: ./Dist-To-Test
        run: make test
